// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/word/{word}": {
            "get": {
                "description": "Retrieves detailed information about a word including definitions, examples, and usage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "word"
                ],
                "summary": "Get word information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Word to look up",
                        "name": "word",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Filter by part of speech (noun, verb, adjective, etc.)",
                        "name": "part_of_speech",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Word found successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.WordInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid part of speech",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Definition": {
            "description": "A single definition of a word",
            "type": "object",
            "properties": {
                "examples": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "meaning": {
                    "description": "Meaning contains the actual definition\n@Description The actual definition of the word",
                    "type": "string"
                },
                "partOfSpeech": {
                    "description": "PartOfSpeech indicates the grammatical category\n@Description Grammatical category (noun, verb, etc.)",
                    "type": "string"
                }
            }
        },
        "models.Idiom": {
            "type": "object",
            "properties": {
                "definition": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Definition"
                    }
                },
                "usage": {
                    "type": "string"
                }
            }
        },
        "models.WordInfo": {
            "description": "Detailed information about a word",
            "type": "object",
            "properties": {
                "CEFRLevel": {
                    "type": "string"
                },
                "audio": {
                    "type": "object",
                    "properties": {
                        "UK": {
                            "type": "string"
                        },
                        "US": {
                            "type": "string"
                        }
                    }
                },
                "definitions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Definition"
                    }
                },
                "idioms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Idiom"
                    }
                },
                "index": {
                    "type": "integer"
                },
                "partOfSpeech": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "word": {
                    "type": "string"
                }
            }
        },
        "response.Response": {
            "description": "Standard API response format",
            "type": "object",
            "properties": {
                "data": {
                    "description": "Data contains the actual response payload\n@Description Response payload data"
                },
                "error": {
                    "description": "Error contains error details if Success is false\n@Description Error details when Success is false",
                    "type": "string"
                },
                "message": {
                    "description": "Message contains a human-readable response message\n@Description Human-readable response message",
                    "type": "string"
                },
                "success": {
                    "description": "Success indicates if the request was successful\n@Description Indicates if the request was successful",
                    "type": "boolean"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
