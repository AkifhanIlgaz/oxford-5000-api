basePath: /api
definitions:
  models.APIKey:
    properties:
      createdAt:
        type: string
      key:
        type: string
      name:
        type: string
      totalUsage:
        type: integer
      uid:
        type: string
    type: object
  models.APIKeyResponse:
    properties:
      apiKey:
        $ref: '#/definitions/models.APIKey'
    type: object
  models.AuthRequest:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  models.Definition:
    description: A single definition of a word
    properties:
      examples:
        items:
          type: string
        type: array
      meaning:
        description: |-
          Meaning contains the actual definition
          @Description The actual definition of the word
        type: string
      partOfSpeech:
        description: |-
          PartOfSpeech indicates the grammatical category
          @Description Grammatical category (noun, verb, etc.)
        type: string
    type: object
  models.Idiom:
    properties:
      definition:
        items:
          $ref: '#/definitions/models.Definition'
        type: array
      usage:
        type: string
    type: object
  models.RefreshTokenRequest:
    properties:
      refreshToken:
        type: string
    required:
    - refreshToken
    type: object
  models.WordInfo:
    description: Detailed information about a word
    properties:
      CEFRLevel:
        type: string
      audio:
        properties:
          UK:
            type: string
          US:
            type: string
        type: object
      definitions:
        items:
          $ref: '#/definitions/models.Definition'
        type: array
      idioms:
        items:
          $ref: '#/definitions/models.Idiom'
        type: array
      index:
        type: integer
      partOfSpeech:
        type: string
      source:
        type: string
      word:
        type: string
    type: object
  response.Response:
    description: Standard API response format
    properties:
      data:
        description: |-
          Data contains the actual response payload
          @Description Response payload data
      error:
        description: |-
          Error contains error details if Success is false
          @Description Error details when Success is false
        type: string
      message:
        description: |-
          Message contains a human-readable response message
          @Description Human-readable response message
        type: string
      success:
        description: |-
          Success indicates if the request was successful
          @Description Indicates if the request was successful
        type: boolean
    type: object
host: localhost:8080
info:
  contact:
    email: your-email@domain.com
    name: Your Name
    url: http://your-url.com
  description: A Dictionary API with authentication and word management features
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Dictionary API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login with email and password
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.AuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
      summary: Login user
      tags:
      - auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Get new access and refresh tokens using a valid refresh token
      parameters:
      - description: Refresh token
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
      summary: Refresh tokens
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user with email and password
      parameters:
      - description: Register credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.AuthRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Register new user
      tags:
      - auth
  /user/api-key:
    delete:
      consumes:
      - application/json
      description: Deletes the API key for the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: API key deleted successfully
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      summary: Delete API Key
      tags:
      - API Keys
    get:
      consumes:
      - application/json
      description: Retrieves the API key for the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: API key retrieved successfully
          schema:
            $ref: '#/definitions/models.APIKeyResponse'
        "404":
          description: No API key found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      summary: Get API Key
      tags:
      - API Keys
    post:
      consumes:
      - application/json
      description: Creates a new API key for the authenticated user
      parameters:
      - description: Name for the API key
        in: query
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: API key created successfully
          schema:
            $ref: '#/definitions/models.APIKeyResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      summary: Create API Key
      tags:
      - API Keys
  /word/{word}:
    get:
      consumes:
      - application/json
      description: Retrieves detailed information about a word including definitions,
        examples, and usage
      parameters:
      - description: Word to look up
        in: path
        name: word
        required: true
        type: string
      - description: Filter by part of speech (noun, verb, adjective, etc.)
        in: query
        name: part_of_speech
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Word found successfully
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.WordInfo'
              type: object
        "400":
          description: Invalid part of speech
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get word information
      tags:
      - word
securityDefinitions:
  Bearer:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
